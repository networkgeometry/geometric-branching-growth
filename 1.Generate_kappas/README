In this file, we will illustrate how to obtain the kappas of descendants from libstable software.

(1) Compiling the libstable software in current folder with the make command:
        $ make
	After compilation, both shared libstable.so and static (libstable.a) versions of the library are produced.
(2) Go to matlab folder and load library in matlab with command:
		loadlibrary('libstable', 'stable.h')
	
(3) To illustrate the usage better, we give an example with citation network. There are 3 files about the original snapshot in folder "data":
	"**_edgelist.txt"-------edgelist file for each line inditates an edge node_i---node_j
	"**_coordinates.txt"----coordinates for each node. Each line inditates node kappa theta. Noted that node index has been reasigned by ascending theta. The corresponding edgelist are in consistent.  
	"**_parameters.txt"-----embedding parameters:  N  beta  mu

(4) run function "Find_kappa.m" to generate kappa in each descendants' layer with command:
		[pars_fit]=Find_kappa(filepath, layers, ps) 
	where filepath is the path of files about the original snapshot, layers is the total descendants' layer, ps~[0,1] is the blanching probability so that b=1+ps.
	for example:
	[pars_fit]=Find_kappa('./data/TW_65', 10, 0.5) will load files from filepath './data/TW_65' and generate 10 layer descendants with blanching probability 0.5.
	The function returns some related files in 'data' folder:
	"TW_65_kappa_l_**.txt"----------------is the kappas in the descendants layer** with node_descendants node_ancestor kappa_descendants. These files are very important in the GBG.
	"TW_65_fitting_performance.txt"-------is the fitting performance of the complementary cumulative distribution with [z  Pc(z)_empirical Pc(z)_fitting] in each colomn
	"TW_65_fitting_stable_parameter.txt"--is the stalbe distribution fitting parameters [alpha, eta, c, d]	
	"TW_65_z_kappa_l_**.txt"--------------is the complementary cumulative distribution of z and kappa in each layer. Each colomn indicates [z  Pc(z) kappa Pc(kappa)].
	




